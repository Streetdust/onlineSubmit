<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.challenge.mapper.TbTeacherMapper" >
  <resultMap id="BaseResultMap" type="edu.challenge.entity.TbTeacher" >
    <constructor >
      <idArg column="teacher_id" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="teacher_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="teacher_pass" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="teacher_tel" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    teacher_id, teacher_name, teacher_pass, teacher_tel
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.challenge.entity.TbTeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_teacher
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </select>
  
    
  <select id="selectByPage" resultMap="BaseResultMap" parameterType="edu.challenge.entity.TbTeacherExample" >
    select
    <include refid="Base_Column_List" />
    from tb_teacher
   <if test="page!=null and count!=null">
			limit #{page},#{count}
		</if>
   
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_teacher
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.challenge.entity.TbTeacherExample" >
    delete from tb_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.challenge.entity.TbTeacher" >
    insert into tb_teacher (teacher_id, teacher_name, teacher_pass, 
      teacher_tel)
    values (#{teacherId,jdbcType=VARCHAR}, #{teacherName,jdbcType=VARCHAR}, #{teacherPass,jdbcType=VARCHAR}, 
      #{teacherTel,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="edu.challenge.entity.TbTeacher" >
    insert into tb_teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="teacherName != null" >
        teacher_name,
      </if>
      <if test="teacherPass != null" >
        teacher_pass,
      </if>
      <if test="teacherTel != null" >
        teacher_tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="teacherId != null" >
        #{teacherId,jdbcType=VARCHAR},
      </if>
      <if test="teacherName != null" >
        #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPass != null" >
        #{teacherPass,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        #{teacherTel,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.challenge.entity.TbTeacherExample" resultType="java.lang.Integer" >
    select count(*) from tb_teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_teacher
    <set >
      <if test="record.teacherId != null" >
        teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherName != null" >
        teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherPass != null" >
        teacher_pass = #{record.teacherPass,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherTel != null" >
        teacher_tel = #{record.teacherTel,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_teacher
    set teacher_id = #{record.teacherId,jdbcType=VARCHAR},
      teacher_name = #{record.teacherName,jdbcType=VARCHAR},
      teacher_pass = #{record.teacherPass,jdbcType=VARCHAR},
      teacher_tel = #{record.teacherTel,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.challenge.entity.TbTeacher" >
    update tb_teacher
    <set >
      <if test="teacherName != null" >
        teacher_name = #{teacherName,jdbcType=VARCHAR},
      </if>
      <if test="teacherPass != null" >
        teacher_pass = #{teacherPass,jdbcType=VARCHAR},
      </if>
      <if test="teacherTel != null" >
        teacher_tel = #{teacherTel,jdbcType=VARCHAR},
      </if>
    </set>
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.challenge.entity.TbTeacher" >
    update tb_teacher
    set teacher_name = #{teacherName,jdbcType=VARCHAR},
      teacher_pass = #{teacherPass,jdbcType=VARCHAR},
      teacher_tel = #{teacherTel,jdbcType=VARCHAR}
    where teacher_id = #{teacherId,jdbcType=VARCHAR}
  </update>
</mapper>